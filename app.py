from flask import Flask, request
from twilio.twiml.messaging_response import MessagingResponse
import joblib
import sqlite3
from datetime import datetime
import os

app = Flask(__name__)

model = joblib.load("intent_model.pkl")
vectorizer = joblib.load("vectorizer.pkl")
DB_NAME = "widad_messages.db"

RESPONSES = {
    "ุณูุงู": "ูุฑุญุจุงู ุจู ูู ุงููุฏุงุฏ ููุนุทูุฑ! ๐น ููู ุฃูุฏุฑ ุฃุณุงุนุฏูุ",
    "ุทูุจ": "ูุฑุฌู ุชุฒููุฏูุง ุจุฑูู ุงูุทูุจ ูููุชุงุจุนุฉ. ุดูุฑูุง ูู!",
    "ูุงุนูุฏู_ุฑูู_ุทูุจ": "ุฑูู ุงูุทูุจ ุชู ุฅุฑุณุงูู ุนุจุฑ ุงูุฅูููู. ุฅุฐุง ูู ูุตููุ ูุฑุฌู ุชุฒููุฏูุง ุจุฑูู ุงููุงุชู ุงููุณุฌู ูู ุงูุทูุจ ูููุชุงุจุนุฉ.",
    "ููู_ุฃุญุตู_ุฑูู_ุทูุจ": "ููููู ุงูุนุซูุฑ ุนูู ุฑูู ุงูุทูุจ ูู ุงูุฅูููู ุงูุฐู ุงุณุชุฎุฏูุชู ุฃุซูุงุก ุงูุทูุจ. ุฅุฐุง ูู ูุตููุ ุชูุงุตู ูุนูุง ุจุฑูู ุงููุงุชู ุงููุณุฌู ูุณูุณุงุนุฏู!",
    "ูุฑุน": "ุชูุถู ุจุฒูุงุฑุชูุง ุฅูู ุฃูุฑุจ ูุฑุน ูุฏูู ๐ :\n\nโข ุณูู ุจุฑูุงุก\n- ุณูุชู ุณูุชุฑ ูุณูุท (ุงูููุงูุญ)\nโข ุงูููุงูุญ (ุจุฌุงูุจ ุณูุชู ุณูุชุฑ ุจูุญุทุฉ ุดู)\nโข ูุณูุท ููู\nโข ุงูุนุฐูุจุฉ (ุจุนุฏ ุฃุจุฑุงุฌ ุงูุตุญูุฉ ุจุฌุงูุจ ููุชุงูู)\n- ูุฒูู ุฌุฑุงูุฏ ููู\n- ุนูุงู ููู\nโข ุงูุณููู\n\nโฐ ุฃููุงุช ุงูุนูู:\nุทููุฉ ุฃูุงู ุงูุฃุณุจูุน ูุง ุนุฏุง ุงูุฌูุนุฉ\n10 ุต ุฅูู 1:30 ู\n4:30 ู ุฅูู 10:00 ู\n\nููู ุงูุฌูุนุฉ:\n4:30 ู ุฅูู 10:00 ู\n\nุงููุฌูุนุงุช ุงูุชุฌุงุฑูุฉ:\nุทููุฉ ุฃูุงู ุงูุฃุณุจูุน\n10:00 ุต ุฅูู 10:00 ู\nุงูุฎููุณ ู ุงูุฌูุนุฉ\n10:00 ุฅูู 12:00 ุจุนุฏ ููุชุตู ุงูููู",
    "default": "ููู ุฃูุฏุฑ ุฃุณุงุนุฏูุ"
}

@app.route("/bot", methods=["POST"])
def bot():
    incoming_msg = request.values.get("Body", "").strip()
    sender = request.values.get("From", "")
    print("๐ฉ Received message:", incoming_msg)

    # ูุญุฏุฏ ุงูุฑุฏ ุจูุงุกู ุนูู ุงูุฑุณุงูุฉ
    if incoming_msg.lower() in ["ุงูุณูุงู ุนูููู", "ููุง", "ูุฑุญุจุง"]:
        reply = RESPONSES["ุณูุงู"]
    elif "ุฑูู" in incoming_msg and "ุทูุจ" in incoming_msg and any(word in incoming_msg for word in ["ูุงุนูุฏู", "ูุงุนูุฏู ุฑูู", "ูุงุนูุฏู ุฑูู ุทูุจ"]):
        reply = RESPONSES["ูุงุนูุฏู_ุฑูู_ุทูุจ"]
    elif any(phrase in incoming_msg for phrase in ["ููู ุทูุจู", "ููู ุฃููู ุฑููู", "ููู ุงุญุตู ุฑูู ุทูุจ", "ูุงูุตููู ุฑูู"]):
        reply = RESPONSES["ููู_ุฃุญุตู_ุฑูู_ุทูุจ"]
    elif any(word in incoming_msg for word in ["ูุฑุน", "ููู ุงููุฑุน", "ุงููุฑูุน"]):
        reply = RESPONSES["ูุฑุน"]
    elif "ุทูุจ" in incoming_msg:
        reply = RESPONSES["ุทูุจ"]
    else:
        X = vectorizer.transform([incoming_msg])
        predicted_intent = model.predict(X)[0]
        print("๐ฎ Intent identified:", predicted_intent)
        reply = RESPONSES.get(predicted_intent, RESPONSES["default"])

    # ุฅุนุฏุงุฏ ุงูุฑุฏ
    resp = MessagingResponse()
    msg = resp.message()
    msg.body(reply)

    # ุญูุธ ุงูุจูุงูุงุช ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
    conn = sqlite3.connect(DB_NAME)
    c = conn.cursor()
    c.execute("""
        CREATE TABLE IF NOT EXISTS messages (
            sender TEXT,
            message TEXT,
            date TEXT
        )
    """)
    c.execute("INSERT INTO messages (sender, message, date) VALUES (?, ?, ?)",
              (sender, incoming_msg, datetime.now().strftime('%Y-%m-%d %H:%M:%S')))
    conn.commit()
    conn.close()

    return str(resp)

if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)


